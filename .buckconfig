[client]
# Do not delete this section. Used by arc focus for logging.

[project]
  # Note that `buck project --ide intellij` can be run from the root.
  # to override this default.
  ide = xcode
  # Forbid symlinks for source files so Buck doesn't have to dump its
  # cache every time it encounters one.
  allow_symlinks = forbid

  # Use watchman when available to speed up glob() calls
  glob_handler = watchman

  # Directories that do not contain input files. Any build output directories
  # (but NOT .hg, .git, or anything tracked in source control) should be in
  # .watchmanconfig.
  ignore = \
    .buckd, \
    .git, \
    .hg, \
    tmp, \
    Tools/clang/analyzer/build, \
    Tools/clang/clang-ocaml-DEPRECATED/build, \
    Tools/clang/libtooling/build, \
    Tools/clang/xcode, \
    Tools/xctool/build, \
    VendorLib/Breakpad/src/tools/mac/dump_syms/build, \
    **/.DS_Store, \
    **/**.orig, \
    Libraries/FBReactKit/js/react-native-github/ReactAndroid, \
    Libraries/FBReactKit/js/react-native-github/Examples/**/android/**, \
    Libraries/FBReactKit/js/react-native-github/local-cli/generator*/**, \
    Libraries/FBReactKit/js/RKJSModules/Libraries/Relay/relay/__github__/**, \
    **/.*.swp, \
    **/.*.swx, \
    **/.*.swpx, \
    **/.*.swo, \
    **/.#*, \
    **/*~

  parallel_parsing = true
  parsing_threads = 4

  # Enable build file sandboxing
  enable_build_file_sandboxing = true


[buildfile]
  includes = //internal/buck/build_defs.py

[apple]
  device_helper_target = //Tools/SDMMobileDevice:iOSConsole#macosx-x86_64
  iphonesimulator_target_sdk_version = 8.0
  iphoneos_target_sdk_version = 8.0
  macosx_target_sdk_version = 10.9
  watchos_target_sdk_version = 2.0
  watchsimulator_target_sdk_version = 2.0
  xctool_zip_target = //EndToEndTests/FBSimulatorControl:FBXCTest-zip
  xctool_default_destination_specifier = "name=iPhone 5s"
  force_dsym_mode_in_build_with_buck = false

  default_debug_info_format_for_binaries = DWARF
  default_debug_info_format_for_libraries = DWARF
  default_debug_info_format_for_tests = DWARF


[cxx]
    # Disabling deprecated APIs and truncating casts were unfortunately in use
    # before fbobjc was Buck-ified.
    cflags = -std=gnu11 -Wno-deprecated -Wno-conversion -Wundeclared-selector -Wno-objc-designated-initializers -Wimplicit-retain-self -Werror -g
    cxxflags = -std=c++14 -stdlib=libc++ -Wno-deprecated -Wno-conversion -Wundeclared-selector -Wno-objc-designated-initializers -Wimplicit-retain-self -Werror -g
    # workaround for osmeta's ranlib, which does not set -s as default.
    ranlibflags = -s
    default_platform = iphonesimulator-x86_64
    # We enabled combined preprocessing+compiling for two reasons:
    # 1. Doing these two steps separately is slower, and until we support
    #    generalized ABI rule keys, there isn't any reason not to do this
    #    as a single combined step.
    # 2. Clang has a bug where #pragmas for ARC aren't written to preprocessed
    #    sources, and so get ommited in the actual compilation.
    combined_preprocess_and_compile = true
    # We explicitly set the host platform so that the rule keys will match between
    # different OS X versions as long as the Xcode Toolchain and SDK versions match.
    # Note this will break the builds if the machine doesn't have the SDK installed
    # or if it cannot run binaries built with it.
    host_platform = macosx-x86_64

    # Link rules take up 2 equivalent CPUs. This limiting reduces concurrent
    # links to improve io/memory contention.
    link_weight = 2
